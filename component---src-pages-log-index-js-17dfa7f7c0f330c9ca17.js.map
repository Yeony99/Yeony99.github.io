{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/page-header.js","webpack://gatsby-starter-default/./src/components/tag.js","webpack://gatsby-starter-default/./src/pages/log/index.js"],"names":["PH","styled","props","title","subtitle","Tag","data","useState","key","isOpen","obj","setState","open","setOpen","all","setAll","test","tag","console","log","path","className","onClick","allMarkdownRemark","distinct","map","edges","node","id","style","display","frontmatter","tags","includes","name","dangerouslySetInnerHTML","__html","html","excerpt","fontSize","date"],"mappings":"sKAGMA,EAAKC,uBAAH,2DAAGA,CAAH,mBAeR,IAXmB,SAAAC,GACf,OACI,yBACI,QAACF,EAAD,MACI,kBAAKE,EAAMC,QACX,kBAAKD,EAAME,c,sCCTrBC,E,OAAMJ,kBAAH,gDAAGA,CAAH,gGAQT,O,mHCJA,mBAAe,GAAe,IAAZK,EAAW,EAAXA,KAChB,GAAwBC,cAAS,CAC/BC,IAAK,GACLC,QAAQ,IAFHC,EAAP,KAAYC,EAAZ,KAKA,GAAwBJ,eAAS,GAA1BK,EAAP,KAAaC,EAAb,KASA,GAAsBN,cAAS,IAAxBO,EAAP,KAAYC,EAAZ,KAGMC,EAAO,SAACC,GACZC,QAAQC,IAAI,WAAYF,GACxBF,EAAOE,IAIP,OACI,yBACI,QAAC,IAAD,CAAQG,KAAK,OAAOjB,MAAM,QAC1B,eAAKkB,UAAU,SACX,QAAC,IAAD,CAAYlB,MAAM,QAAQC,SAAS,6BACnC,eAAKiB,UAAU,iDACb,QAAC,IAAD,CAAKA,UAAW,0BAAmC,IAAPP,EAAW,eAAiB,IAAKQ,QAAS,kBAAMN,EAAK,MAAjG,OAEEV,EAAKiB,kBAAkBC,SAASC,KAAI,SAAAR,GAAG,OAAI,QAAC,IAAD,CAAKT,IAAKS,EAAKI,UAAW,0BAA4BP,GAAOG,EAAK,eAAiB,IAAKK,QAAS,kBAAMN,EAAKC,KAAOA,OAIjKX,EAAKiB,kBAAkBG,MAAMD,KAAI,gBAAGE,EAAH,EAAGA,KAAH,OAE9B,eAAKnB,IAAKmB,EAAKC,GAAIP,UAAU,kBAAkBQ,MAAO,CAACC,QAAUhB,EAAgBa,EAAKI,YAAYC,KAAKP,KAAI,SAAAR,GAAG,OAAIA,KAAKgB,SAASnB,GAAM,QAAU,OAAzE,WAEnE,eAAKO,UAAU,kBAAkBa,KAAK,MAAMZ,QAAS,kBAhCpDd,EAgCwEmB,EAAKC,GA/BlGf,IAD0BJ,EAgC4EG,IA9BtGM,QAAQC,IAAIV,EAAQG,GACpBD,EAAS,OAAD,UAAKD,EAAL,CAAUF,IAAKA,EAAKC,OAAQG,UACpCM,QAAQC,IAAIX,EAAKE,GAJG,IAACF,EAAKC,KAiCA,kBAAKkB,EAAKI,YAAY5B,QACtB,eAAKkB,UAAS,4BAA6BX,EAAIF,KAAOmB,EAAKC,GAAI,mBAAqB,MACjF,eAAKO,wBAA0B,CAACC,OAAQ1B,EAAIF,KAAOmB,EAAKC,GAAID,EAAKU,KAAOV,EAAKW,QAAQ,iDAGxF,eAAKjB,UAAU,8CAA4C,eAAKA,UAAU,QAAQM,EAAKI,YAAYC,KAAKP,KAAI,SAAAR,GAAG,OAAI,QAAC,IAAD,CAAKT,IAAKS,EAAKI,UAAU,OAAOJ,QAAkB,eAAKY,MAAO,CAACU,SAAU,WAAaZ,EAAKI,YAAYS,QAC1N,0BAOlB,QAAC,IAAD","file":"component---src-pages-log-index-js-17dfa7f7c0f330c9ca17.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst PH = styled.header`\r\n    padding: 1rem;\r\n`\r\n\r\nconst PageHeader = props => {\r\n    return (\r\n        <>\r\n            <PH>\r\n                <h1>{props.title}</h1>\r\n                <h6>{props.subtitle}</h6>\r\n            </PH>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PageHeader;","// import React from \"react\"\r\nimport styled from \"styled-components\";\r\n\r\nconst Tag = styled.div`\r\n    padding: 0.1rem 0.5rem;\r\n    margin: 0.5rem;\r\n    margin-left: 0;\r\n    font-size: 0.85rem;\r\n    border-radius: 0.25rem;\r\n`\r\n\r\nexport default Tag;","import React, { useState } from \"react\";\r\nimport Header from \"../../components/header\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport PageHeader from \"../../components/page-header\";\r\nimport Tag from \"../../components/tag\";\r\nimport Footer from \"../../components/footer\";\r\n\r\nexport default ({ data }) => {\r\n  const [obj, setState] = useState({\r\n    key: '',\r\n    isOpen: false,\r\n  });\r\n\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const changeHandler = (key, isOpen) => {\r\n    setOpen(isOpen? false: true)\r\n    console.log(isOpen, open)\r\n    setState({...obj, key: key, isOpen: open})\r\n    console.log(key, obj)\r\n  }\r\n\r\n  const [all, setAll] = useState('')\r\n\r\n\r\n  const test = (tag) => {\r\n    console.log('test!!!!', tag)\r\n    setAll(tag)\r\n  }\r\n\r\n  \r\n    return (\r\n        <>\r\n            <Header path=\"/log\" title=\"로그\" />\r\n            <div className=\"wrap\">\r\n                <PageHeader title=\"Log ☘\" subtitle=\"개발, 읽을거리, 일 관련된 사소한 기록들\" />\r\n                <div className=\"padding-bottom-1 wrap flex overflow-x-scroll\">\r\n                  <Tag className={\"tag pointer bg-orange \" + (all == ''? 'selected-tag' : '')} onClick={() => test('')}>All</Tag>\r\n                  {\r\n                    data.allMarkdownRemark.distinct.map(tag => <Tag key={tag} className={\"tag pointer bg-orange \" + (all == tag? 'selected-tag' : '')} onClick={() => test(tag)}>{tag}</Tag>)\r\n                  }\r\n                </div>\r\n                \r\n                {data.allMarkdownRemark.edges.map(({ node }) => (\r\n                  \r\n                    <div key={node.id} className=\"row flex-column\" style={{display: !all ? 'block' : node.frontmatter.tags.map(tag => tag).includes(all)? 'block' : 'none'}}>\r\n                      {/* <Link to={node.frontmatter.slug}> */}\r\n                        <div className=\"padding-1 h-100\" name=\"key\" onClick={() => changeHandler(node.id, open)}>\r\n                              <h3>{node.frontmatter.title}</h3>\r\n                              <div className={`transition duration-500 ${obj.key == node.id? ' log-selected-bg' : ''}`}>\r\n                                 <div dangerouslySetInnerHTML={ {__html: obj.key == node.id? node.html : node.excerpt+' <span style=\"color: #c5c5d6\"> 더보기</span>'} }></div>\r\n                              </div>\r\n                              \r\n                              <div className=\"flex justify-content-between align-center\"><div className=\"flex\">{node.frontmatter.tags.map(tag => <Tag key={tag} className=\"tag\">{tag}</Tag>)}</div><div style={{fontSize: 0.7+'rem'}}>{node.frontmatter.date}</div></div>\r\n                              <hr/>\r\n                          </div>\r\n                      {/* </Link> */}\r\n                    </div>\r\n                ))}\r\n\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport const query = graphql`\r\nquery MyQuery {\r\n  allMarkdownRemark(filter: {frontmatter: {category: {eq: \"log\"}}} sort: {fields: frontmatter___date, order: DESC}) {\r\n    edges {\r\n      node {\r\n        frontmatter {\r\n          date\r\n          title\r\n          tags    \r\n          slug\r\n        }\r\n        excerpt\r\n        html\r\n        internal {\r\n          content\r\n        }\r\n        id\r\n      }\r\n    }\r\n    distinct(field: frontmatter___tags)\r\n  }\r\n}\r\n\r\n\r\n`"],"sourceRoot":""}