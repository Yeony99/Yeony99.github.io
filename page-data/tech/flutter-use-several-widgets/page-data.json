{"componentChunkName":"component---src-templates-blog-post-js","path":"/tech/flutter-use-several-widgets","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"category":"tech","slug":"/tech/flutter-use-several-widgets","tags":["스터디 Flutter"],"date":"2022-09-30","img":null,"title":"[Flutter] 다양한 위젯 사용하기"},"html":"<h2 id=\"flutter-위젯-사용하기\" style=\"position:relative;\">Flutter 위젯 사용하기<a href=\"#flutter-%EC%9C%84%EC%A0%AF-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"flutter 위젯 사용하기 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">import &#39;package:flutter/material.dart&#39;;\r\n\r\nvoid main() {\r\n  runApp(MyApp());\r\n}\r\n\r\nclass MyApp extends StatelessWidget {\r\n  // This widget is the root of your application.\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      home: Scaffold(\r\n      ),\r\n    );\r\n  }\r\n}</code>\n        </deckgo-highlight-code>\n<p>여기서부터 시작을 해봅시다.</p>\n<h3 id=\"materialapp\" style=\"position:relative;\">MaterialApp<a href=\"#materialapp\" aria-label=\"materialapp permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p><code class=\"language-text\">MaterialApp</code> 클래스는 <strong>Material Design</strong>을 사용합니다.</p>\n<p><a href=\"https://material.io/design\">머티리얼 디자인</a> 은 대개 안드로이드 스마트폰에 적용되는 디자인입니다. 플러터에서는 머티리얼 디자인을 기반으로 동작하도록 여러 위젯을 래핑할 수 있는 <code class=\"language-text\">MaterialApp</code>을 제공합니다. 플러터 자체에서 이미 머티리얼 디자인이 구성되어 있어 별도의 개발이나 스타일링이 필요하지 않습니다.</p>\n<h4 id=\"title\" style=\"position:relative;\">title<a href=\"#title\" aria-label=\"title permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>간단한 앱의 한 줄 설명입니다. 안드로이드에서는 최근 사용한 앱에 표시되고, iOS에는 사용할 수 없습니다.</p>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">MaterialApp(\r\n  title: &#39;머티리얼 앱&#39;\r\n)</code>\n        </deckgo-highlight-code>\n<br/>\n<h4 id=\"theme\" style=\"position:relative;\">theme<a href=\"#theme\" aria-label=\"theme permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>말 그대로 앱의 테마를 지정할 수 있는 속성입니다.</p>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">MaterialApp(\r\n  theme: ThemeData(\r\n    // 전체 테마의 밝기\r\n    // Brightness.light면 TextStyle이 기본으로 검정색\r\n    // Brightness.dark면 기본으로 흰색\r\n    brightness: Brightness.light,\r\n\r\n    //앱바, 탭바 등의 색상 결정\r\n    primaryColor: Colors.greenAccent,\r\n\r\n    // 위젯의 강조색\r\n    accentColor: Colors.redAccent,\r\n\r\n    // 기본 사용 폰트 지정\r\n    fontFamily: &#39;IBM-Sans&#39;\r\n  )\r\n)</code>\n        </deckgo-highlight-code>\n<br/>\n<h4 id=\"home\" style=\"position:relative;\">home<a href=\"#home\" aria-label=\"home permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>MaterialApp 기본 경로로, 앱 실행 시 가장 먼저 확인할 수 있는 화면입니다.</p>\n<p><code class=\"language-text\">Scaffold</code> 위젯을 사용해 정의합니다.</p>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">MaterialApp(\r\n  home: Scaffold(\r\n\r\n  )\r\n)</code>\n        </deckgo-highlight-code>\n<p>여기까지는 Scaffold에 아무것도 작성하지 않았기 때문에, 흰색 화면만 보여집니다. Scaffold 클래스를 작성해봅시다.</p>\n<br/>\n<hr>\n<h3 id=\"scaffold\" style=\"position:relative;\">Scaffold<a href=\"#scaffold\" aria-label=\"scaffold permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p><code class=\"language-text\">Scaffold</code>는 앱의 최상단, 중간, 최하단, floating 버튼을 지원하는 클래스입니다.</p>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">import &#39;package:flutter/material.dart&#39;;\r\n\r\nvoid main() {\r\n  runApp(MyApp());\r\n}\r\n\r\nclass MyApp extends StatelessWidget {\r\n  // This widget is the root of your application.\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      title: &#39;머티리얼 앱&#39;,\r\n      theme: ThemeData(\r\n        brightness: Brightness.light,\r\n        primaryColor: Colors.blue,\r\n        accentColor: Colors.redAccent,\r\n        fontFamily: &#39;IBM-Sans&#39;\r\n      ),\r\n      home: Scaffold(\r\n      ),\r\n    );\r\n  }\r\n}</code>\n        </deckgo-highlight-code>\n<p>MaterialApp을 작성한 결과입니다. 이를 바탕으로 <code class=\"language-text\">Scaffold</code>를 작성해봅시다.</p>\n<h4 id=\"appbar\" style=\"position:relative;\">appBar<a href=\"#appbar\" aria-label=\"appbar permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>앱 최상단에 자리하며, 주로 현재 창의 이름을 표시할 때 사용됩니다.</p>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">Scaffold(\r\n  appBar: AppBar(\r\n    title: Text(&#39;샘플 앱바&#39;)\r\n  )\r\n),</code>\n        </deckgo-highlight-code>\n<p><img src=\"https://user-images.githubusercontent.com/76241233/192941323-18aa4d87-5ac3-4ba3-9708-8ec0ac8f4e91.png\" alt=\"Scaffold AppBar\"></p>\n<br/>\n<h4 id=\"body\" style=\"position:relative;\">body<a href=\"#body\" aria-label=\"body permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>가운데 영역을 의미합니다.</p>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">Scaffold(\r\n  body: Center(\r\n    child: Text(&#39;샘플 스캐폴드 바디&#39;)\r\n  )\r\n),</code>\n        </deckgo-highlight-code>\n<p><img src=\"https://user-images.githubusercontent.com/76241233/192941771-1c0a54eb-f261-4125-a00c-8759b57b95b2.png\" alt=\"Scaffold Body\"></p>\n<h4 id=\"bottomnavigationbar\" style=\"position:relative;\">bottomNavigationBar<a href=\"#bottomnavigationbar\" aria-label=\"bottomnavigationbar permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>다른 창으로 이동할 수 있는 버튼들이 있는 영역입니다.\r\n안드로이드에서는 <code class=\"language-text\">Bottom Navigation Bar</code>를 사용하고, iOS에서는 <code class=\"language-text\">Tab Bar</code>로 불리는 영역입니다.</p>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">Scaffold(\r\n  bottomNavigationBar: BottomNavigationBar(\r\n    items: const &lt;BottomNavigationBarItem&gt;[\r\n      BottomNavigationBarItem(\r\n        icon: Icon(Icons.home),\r\n        label: &#39;Home&#39;,\r\n      ),\r\n      BottomNavigationBarItem(\r\n        icon: Icon(Icons.business),\r\n        label: &#39;Business&#39;,\r\n      ),\r\n      BottomNavigationBarItem(\r\n        icon: Icon(Icons.school),\r\n        label: &#39;School&#39;,\r\n      ),\r\n    ],\r\n    selectedItemColor: Colors.amber[800],\r\n  ),\r\n),</code>\n        </deckgo-highlight-code>\n<p>bottomNavigationBar 속성에 <code class=\"language-text\">bottomNavigationBar</code> 클래스를 적고, items로 <code class=\"language-text\">BottomNavigationBarItem</code>의 리스트를 작성합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/76241233/192942420-2a98e55e-6d3c-4977-9d5a-88a4e83bc54d.png\" alt=\"Scaffold BottomNavigationBar\"></p>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">import &#39;package:flutter/material.dart&#39;;\r\n\r\nvoid main() {\r\n  runApp(MyApp());\r\n}\r\n\r\nclass MyApp extends StatelessWidget {\r\n  // This widget is the root of your application.\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      title: &#39;머티리얼 앱&#39;,\r\n      theme: ThemeData(\r\n        brightness: Brightness.light,\r\n        primaryColor: Colors.blue,\r\n        accentColor: Colors.redAccent,\r\n        fontFamily: &#39;IBM-Sans&#39;\r\n      ),\r\n      home: Scaffold(\r\n        appBar: AppBar(\r\n          title: Text(&#39;샘플 앱바&#39;)\r\n        ),\r\n        body: Center(\r\n          child: Text(&#39;샘플 스캐폴드 바디&#39;)\r\n        ),\r\n        bottomNavigationBar: BottomNavigationBar(\r\n          items: const &lt;BottomNavigationBarItem&gt;[\r\n            BottomNavigationBarItem(\r\n              icon: Icon(Icons.home),\r\n              label: &#39;Home&#39;,\r\n            ),\r\n            BottomNavigationBarItem(\r\n              icon: Icon(Icons.business),\r\n              label: &#39;Business&#39;,\r\n            ),\r\n            BottomNavigationBarItem(\r\n              icon: Icon(Icons.school),\r\n              label: &#39;School&#39;,\r\n            ),\r\n          ],\r\n          selectedItemColor: Colors.amber[800],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}</code>\n        </deckgo-highlight-code>\n<br/>\n<hr>\n<h2 id=\"sliverappbar\" style=\"position:relative;\">SliverAppBar<a href=\"#sliverappbar\" aria-label=\"sliverappbar permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>앱 스크롤에 따라 모양이 변하는 appBar 입니다.</p>\n<p><code class=\"language-text\">CustomScrollView</code>의 자식으로 사용됩니다. <strong>Sliver</strong>란 scrollable한 위젯들을 의미합니다.</p>\n<p>위에서 만든 Scaffold의 body를 수정합니다.</p>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">Scaffold(\r\n  body: CustomScrollView(\r\n    slivers: [\r\n      const SliverAppBar(\r\n        floating: true,\r\n        flexibleSpace: FlexibleSpaceBar(\r\n          title: Text(&#39;SliverAppBar&#39;),\r\n          background: FlutterLogo(),\r\n        ),\r\n        expandedHeight: 200,\r\n      ),\r\n      SliverFixedExtentList(\r\n        itemExtent: 50.0,\r\n        delegate: SliverChildBuilderDelegate((BuildContext context, int index) {\r\n          return Column(\r\n            children: [\r\n              Text(\r\n                &#39;List Item $index&#39;,\r\n                style: TextStyle(\r\n                    fontSize: 20,\r\n                    color: Colors.purple[100 * (index % 10)]),\r\n              ),\r\n            ]);\r\n        }, childCount: 15),\r\n      ),\r\n    ],\r\n  )\r\n)</code>\n        </deckgo-highlight-code>\n<h3 id=\"sliverappbar-속성\" style=\"position:relative;\">SliverAppBar 속성<a href=\"#sliverappbar-%EC%86%8D%EC%84%B1\" aria-label=\"sliverappbar 속성 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h4 id=\"floating--pinned\" style=\"position:relative;\">floating / pinned<a href=\"#floating--pinned\" aria-label=\"floating  pinned permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p><code class=\"language-text\">floating: true</code> 옵션을 주게 되면 SliverAppBar에 있는 title 부분이 스크롤할 때 사라져서 보이지 않게 됩니다.</p>\n<p><code class=\"language-text\">pinned: true</code> 속성을 주면 title 부분은 스크롤이 되더라도 고정되어 보이게 됩니다.</p>\n<h4 id=\"flexiblespace\" style=\"position:relative;\">flexibleSpace<a href=\"#flexiblespace\" aria-label=\"flexiblespace permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>flexible하게 보여질 공간입니다. 스크롤 시 보여지지 않을 부분의 속성입니다.</p>\n<p>여기서는 flutter logo를 배경으로 설정했습니다.</p>\n<h4 id=\"expandedheight\" style=\"position:relative;\">expandedHeight<a href=\"#expandedheight\" aria-label=\"expandedheight permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>스크롤이 되지 않았을 경우의 height를 설정합니다.</p>\n<br/>\n<hr>\n<h3 id=\"sliverfixedextentlist\" style=\"position:relative;\">SliverFixedExtentList<a href=\"#sliverfixedextentlist\" aria-label=\"sliverfixedextentlist permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>Sliver 되는 appBar 밑으로 출력될 리스트입니다. <code class=\"language-text\">ListView</code>와 대응된다고 생각하면 됩니다.</p>\n<h4 id=\"sliverchildbuilderdelegate\" style=\"position:relative;\">SliverChildBuilderDelegate<a href=\"#sliverchildbuilderdelegate\" aria-label=\"sliverchildbuilderdelegate permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>SliverList는 child 목록으로 <code class=\"language-text\">SliverChildBuilderDelegate</code> 위젯을 이용합니다. <code class=\"language-text\">childCount</code> 속성으로 리스트의 개수를 컨트롤할 수 있습니다.</p>\n<img src=\"https://user-images.githubusercontent.com/76241233/192960322-b9cf7280-66bf-482f-931d-a3834c3ab265.png\" alt=\"SliverAppBar &amp; Sliver list\"> \r\n<img src=\"https://user-images.githubusercontent.com/76241233/192962714-4c44deae-4fba-48f3-802e-3903b7cf1cef.png\" alt=\"Sliver\">\n<p>◾ <a href=\"/tech/flutter-understanding-constraints\">[Flutter] Constraints 이해하기</a> 👈 이전 글 보기\r\n◾ <a href=\"/tech/flutter-use-several-buttons\">[Flutter] 다양한 버튼 사용하기</a> 👈 다음 글 보기</p>","internal":{"content":"## Flutter 위젯 사용하기\r\n\r\n```dart\r\nimport 'package:flutter/material.dart';\r\n\r\nvoid main() {\r\n  runApp(MyApp());\r\n}\r\n\r\nclass MyApp extends StatelessWidget {\r\n  // This widget is the root of your application.\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      home: Scaffold(\r\n      ),\r\n    );\r\n  }\r\n}\r\n```\r\n\r\n여기서부터 시작을 해봅시다.\r\n\r\n### MaterialApp\r\n\r\n`MaterialApp` 클래스는 **Material Design**을 사용합니다. \r\n\r\n[머티리얼 디자인](https://material.io/design) 은 대개 안드로이드 스마트폰에 적용되는 디자인입니다. 플러터에서는 머티리얼 디자인을 기반으로 동작하도록 여러 위젯을 래핑할 수 있는 `MaterialApp`을 제공합니다. 플러터 자체에서 이미 머티리얼 디자인이 구성되어 있어 별도의 개발이나 스타일링이 필요하지 않습니다.\r\n\r\n#### title\r\n\r\n간단한 앱의 한 줄 설명입니다. 안드로이드에서는 최근 사용한 앱에 표시되고, iOS에는 사용할 수 없습니다.\r\n\r\n```dart\r\nMaterialApp(\r\n  title: '머티리얼 앱'\r\n)\r\n```\r\n<br/>\r\n\r\n#### theme \r\n\r\n말 그대로 앱의 테마를 지정할 수 있는 속성입니다.\r\n\r\n```dart\r\nMaterialApp(\r\n  theme: ThemeData(\r\n    // 전체 테마의 밝기\r\n    // Brightness.light면 TextStyle이 기본으로 검정색\r\n    // Brightness.dark면 기본으로 흰색\r\n    brightness: Brightness.light,\r\n\r\n    //앱바, 탭바 등의 색상 결정\r\n    primaryColor: Colors.greenAccent,\r\n\r\n    // 위젯의 강조색\r\n    accentColor: Colors.redAccent,\r\n\r\n    // 기본 사용 폰트 지정\r\n    fontFamily: 'IBM-Sans'\r\n  )\r\n)\r\n```\r\n\r\n<br/>\r\n\r\n#### home\r\n\r\nMaterialApp 기본 경로로, 앱 실행 시 가장 먼저 확인할 수 있는 화면입니다.\r\n\r\n`Scaffold` 위젯을 사용해 정의합니다.\r\n\r\n```dart\r\nMaterialApp(\r\n  home: Scaffold(\r\n\r\n  )\r\n)\r\n```\r\n\r\n여기까지는 Scaffold에 아무것도 작성하지 않았기 때문에, 흰색 화면만 보여집니다. Scaffold 클래스를 작성해봅시다.\r\n\r\n<br/>\r\n\r\n---\r\n\r\n### Scaffold\r\n\r\n`Scaffold`는 앱의 최상단, 중간, 최하단, floating 버튼을 지원하는 클래스입니다.\r\n\r\n\r\n```dart\r\nimport 'package:flutter/material.dart';\r\n\r\nvoid main() {\r\n  runApp(MyApp());\r\n}\r\n\r\nclass MyApp extends StatelessWidget {\r\n  // This widget is the root of your application.\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      title: '머티리얼 앱',\r\n      theme: ThemeData(\r\n        brightness: Brightness.light,\r\n        primaryColor: Colors.blue,\r\n        accentColor: Colors.redAccent,\r\n        fontFamily: 'IBM-Sans'\r\n      ),\r\n      home: Scaffold(\r\n      ),\r\n    );\r\n  }\r\n}\r\n```\r\n\r\nMaterialApp을 작성한 결과입니다. 이를 바탕으로 `Scaffold`를 작성해봅시다.\r\n\r\n#### appBar\r\n\r\n앱 최상단에 자리하며, 주로 현재 창의 이름을 표시할 때 사용됩니다.\r\n\r\n```dart\r\nScaffold(\r\n  appBar: AppBar(\r\n    title: Text('샘플 앱바')\r\n  )\r\n),\r\n```\r\n\r\n![Scaffold AppBar](https://user-images.githubusercontent.com/76241233/192941323-18aa4d87-5ac3-4ba3-9708-8ec0ac8f4e91.png)\r\n\r\n<br/>\r\n\r\n#### body\r\n\r\n가운데 영역을 의미합니다. \r\n\r\n```dart\r\nScaffold(\r\n  body: Center(\r\n    child: Text('샘플 스캐폴드 바디')\r\n  )\r\n),\r\n```\r\n![Scaffold Body](https://user-images.githubusercontent.com/76241233/192941771-1c0a54eb-f261-4125-a00c-8759b57b95b2.png)\r\n\r\n\r\n#### bottomNavigationBar\r\n\r\n다른 창으로 이동할 수 있는 버튼들이 있는 영역입니다.\r\n안드로이드에서는 `Bottom Navigation Bar`를 사용하고, iOS에서는 `Tab Bar`로 불리는 영역입니다.\r\n\r\n```dart\r\nScaffold(\r\n  bottomNavigationBar: BottomNavigationBar(\r\n    items: const <BottomNavigationBarItem>[\r\n      BottomNavigationBarItem(\r\n        icon: Icon(Icons.home),\r\n        label: 'Home',\r\n      ),\r\n      BottomNavigationBarItem(\r\n        icon: Icon(Icons.business),\r\n        label: 'Business',\r\n      ),\r\n      BottomNavigationBarItem(\r\n        icon: Icon(Icons.school),\r\n        label: 'School',\r\n      ),\r\n    ],\r\n    selectedItemColor: Colors.amber[800],\r\n  ),\r\n),\r\n```\r\n\r\nbottomNavigationBar 속성에 `bottomNavigationBar` 클래스를 적고, items로 `BottomNavigationBarItem`의 리스트를 작성합니다.\r\n\r\n![Scaffold BottomNavigationBar](https://user-images.githubusercontent.com/76241233/192942420-2a98e55e-6d3c-4977-9d5a-88a4e83bc54d.png)\r\n\r\n\r\n```dart\r\nimport 'package:flutter/material.dart';\r\n\r\nvoid main() {\r\n  runApp(MyApp());\r\n}\r\n\r\nclass MyApp extends StatelessWidget {\r\n  // This widget is the root of your application.\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      title: '머티리얼 앱',\r\n      theme: ThemeData(\r\n        brightness: Brightness.light,\r\n        primaryColor: Colors.blue,\r\n        accentColor: Colors.redAccent,\r\n        fontFamily: 'IBM-Sans'\r\n      ),\r\n      home: Scaffold(\r\n        appBar: AppBar(\r\n          title: Text('샘플 앱바')\r\n        ),\r\n        body: Center(\r\n          child: Text('샘플 스캐폴드 바디')\r\n        ),\r\n        bottomNavigationBar: BottomNavigationBar(\r\n          items: const <BottomNavigationBarItem>[\r\n            BottomNavigationBarItem(\r\n              icon: Icon(Icons.home),\r\n              label: 'Home',\r\n            ),\r\n            BottomNavigationBarItem(\r\n              icon: Icon(Icons.business),\r\n              label: 'Business',\r\n            ),\r\n            BottomNavigationBarItem(\r\n              icon: Icon(Icons.school),\r\n              label: 'School',\r\n            ),\r\n          ],\r\n          selectedItemColor: Colors.amber[800],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n```\r\n\r\n<br/>\r\n\r\n---\r\n\r\n## SliverAppBar\r\n\r\n앱 스크롤에 따라 모양이 변하는 appBar 입니다.\r\n\r\n`CustomScrollView`의 자식으로 사용됩니다. **Sliver**란 scrollable한 위젯들을 의미합니다.\r\n\r\n위에서 만든 Scaffold의 body를 수정합니다.\r\n\r\n```dart\r\nScaffold(\r\n  body: CustomScrollView(\r\n    slivers: [\r\n      const SliverAppBar(\r\n        floating: true,\r\n        flexibleSpace: FlexibleSpaceBar(\r\n          title: Text('SliverAppBar'),\r\n          background: FlutterLogo(),\r\n        ),\r\n        expandedHeight: 200,\r\n      ),\r\n      SliverFixedExtentList(\r\n        itemExtent: 50.0,\r\n        delegate: SliverChildBuilderDelegate((BuildContext context, int index) {\r\n          return Column(\r\n            children: [\r\n              Text(\r\n                'List Item $index',\r\n                style: TextStyle(\r\n                    fontSize: 20,\r\n                    color: Colors.purple[100 * (index % 10)]),\r\n              ),\r\n            ]);\r\n        }, childCount: 15),\r\n      ),\r\n    ],\r\n  )\r\n)\r\n```\r\n\r\n\r\n### SliverAppBar 속성\r\n\r\n#### floating / pinned\r\n\r\n`floating: true` 옵션을 주게 되면 SliverAppBar에 있는 title 부분이 스크롤할 때 사라져서 보이지 않게 됩니다. \r\n\r\n`pinned: true` 속성을 주면 title 부분은 스크롤이 되더라도 고정되어 보이게 됩니다.\r\n\r\n#### flexibleSpace\r\n\r\nflexible하게 보여질 공간입니다. 스크롤 시 보여지지 않을 부분의 속성입니다.\r\n\r\n여기서는 flutter logo를 배경으로 설정했습니다.\r\n\r\n#### expandedHeight\r\n\r\n스크롤이 되지 않았을 경우의 height를 설정합니다.\r\n\r\n<br/>\r\n\r\n---\r\n\r\n### SliverFixedExtentList\r\n\r\nSliver 되는 appBar 밑으로 출력될 리스트입니다. `ListView`와 대응된다고 생각하면 됩니다.\r\n\r\n#### SliverChildBuilderDelegate\r\n\r\nSliverList는 child 목록으로 `SliverChildBuilderDelegate` 위젯을 이용합니다. `childCount` 속성으로 리스트의 개수를 컨트롤할 수 있습니다.\r\n\r\n\r\n<img src=\"https://user-images.githubusercontent.com/76241233/192960322-b9cf7280-66bf-482f-931d-a3834c3ab265.png\" alt=\"SliverAppBar &amp; Sliver list\"> \r\n<img src=\"https://user-images.githubusercontent.com/76241233/192962714-4c44deae-4fba-48f3-802e-3903b7cf1cef.png\" alt=\"Sliver\">\r\n\r\n\r\n◾ [[Flutter] Constraints 이해하기](/tech/flutter-understanding-constraints) 👈 이전 글 보기\r\n◾ [[Flutter] 다양한 버튼 사용하기](/tech/flutter-use-several-buttons) 👈 다음 글 보기\r\n"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#flutter-%EC%9C%84%EC%A0%AF-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\">Flutter 위젯 사용하기</a></p>\n<ul>\n<li>\n<p><a href=\"#materialapp\">MaterialApp</a></p>\n<ul>\n<li><a href=\"#title\">title</a></li>\n<li><a href=\"#theme\">theme</a></li>\n<li><a href=\"#home\">home</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#scaffold\">Scaffold</a></p>\n<ul>\n<li><a href=\"#appbar\">appBar</a></li>\n<li><a href=\"#body\">body</a></li>\n<li><a href=\"#bottomnavigationbar\">bottomNavigationBar</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#sliverappbar\">SliverAppBar</a></p>\n<ul>\n<li>\n<p><a href=\"#sliverappbar-%EC%86%8D%EC%84%B1\">SliverAppBar 속성</a></p>\n<ul>\n<li><a href=\"#floating--pinned\">floating / pinned</a></li>\n<li><a href=\"#flexiblespace\">flexibleSpace</a></li>\n<li><a href=\"#expandedheight\">expandedHeight</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#sliverfixedextentlist\">SliverFixedExtentList</a></p>\n<ul>\n<li><a href=\"#sliverchildbuilderdelegate\">SliverChildBuilderDelegate</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>"}}]}},"pageContext":{"slug":"/tech/flutter-use-several-widgets"}},"staticQueryHashes":["2665612806"]}