{"componentChunkName":"component---src-templates-blog-post-js","path":"/tech/flutter-text-widget","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"category":"tech","slug":"/tech/flutter-text-widget","tags":["스터디 Flutter"],"date":"2022-09-22","img":null,"title":"[Flutter] Text Widget 사용하기"},"html":"<!-- 📍 텍스트에 대한 다양한 반응의 종류를 알고 이해한다.\r\n\r\n📍 constraints의 의미를 알고 적절하게 사용한다.\r\n\r\n📍 tutorial app을 만들어보며 배운 내용을 정리한다. -->\n<h2 id=\"text-widget\" style=\"position:relative;\">Text Widget<a href=\"#text-widget\" aria-label=\"text widget permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>Flutter에서 아주 흔하게 사용되는 위젯 중 하나가 <code class=\"language-text\">Text</code> 위젯입니다.</p>\n<p>Text 위젯은 이름에서부터 알 수 있듯이 텍스트를 화면에 그리는 위젯입니다. 뿐만 아니라 텍스트에 style을 입힐 수도 있습니다.</p>\n<h3 id=\"text-widget-작성하기\" style=\"position:relative;\">Text Widget 작성하기<a href=\"#text-widget-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"text widget 작성하기 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>기본적인 Text 위젯은 이렇게 작성할 수 있습니다.</p>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">const Text(&#39;Hello World!&#39;)</code>\n        </deckgo-highlight-code>\n<p>여기에 style을 입히고 싶다면 <code class=\"language-text\">style</code> 속성을 지정하면 됩니다.</p>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">Text(\r\n  &#39;Hello World!&#39;,\r\n  style: TextStyle(fontSize: 20),\r\n)</code>\n        </deckgo-highlight-code>\n<h4 id=\"textstyle-class\" style=\"position:relative;\">TextStyle class<a href=\"#textstyle-class\" aria-label=\"textstyle class permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>Flutter에는 Text를 스타일링할 수 있는 <code class=\"language-text\">TextStyle</code> class가 존재합니다.</p>\n<p>TextStyle class는 <code class=\"language-text\">immutable</code>하다고 설명하고 있는데요. 이 말은 사용할 때 명시한 값 외에는 런타임 시 변하게 할 수 없다는 의미입니다.</p>\n<p>TextStyle 클래스를 통해 지정할 수 있는 속성은 아래 링크에서 확인할 수 있습니다.</p>\n<p><a href=\"https://api.flutter.dev/flutter/painting/TextStyle-class.html\">TextStyle class</a></p>\n<br/>\n<hr>\n<h3 id=\"richtext-widget\" style=\"position:relative;\">RichText Widget<a href=\"#richtext-widget\" aria-label=\"richtext widget permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p><code class=\"language-text\">Text</code> 위젯은 하나의 문장을 작성할 수 있었는데요. 텍스트를 나누어 스타일링하고 싶거나 여러 개의 텍스트를 합쳐서 보여주고 싶다면 <code class=\"language-text\">RichText</code>를 사용하면 됩니다.</p>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">RichText(\r\n  text: TextSpan(\r\n    text: &#39;Hello &#39;,\r\n    style: DefaultTextStyle.of(context).style,\r\n    children: const &lt;TextSpan&gt;[\r\n      TextSpan(text: &#39;bold&#39;, style: TextStyle(fontWeight: FontWeight.bold)),\r\n      TextSpan(text: &#39; world!&#39;),\r\n    ],\r\n  ),\r\n)</code>\n        </deckgo-highlight-code>\n<p><code class=\"language-text\">RichText</code> 안에 들어가는 여러 개의 텍스트들은 <code class=\"language-text\">TextSpan</code>을 사용해 보여집니다.</p>\n<p>◾ <a href=\"/tech/flutter-layout-widget\">[Flutter] Layout Widget 정리</a> 👈 이전 글 보기<br>\n◾ <a href=\"/tech/flutter-understanding-constraints\">[Flutter] Constraints 이해하기</a> 👈 다음 글 보기</p>","internal":{"content":"\r\n<!-- 📍 텍스트에 대한 다양한 반응의 종류를 알고 이해한다.\r\n\r\n📍 constraints의 의미를 알고 적절하게 사용한다.\r\n\r\n📍 tutorial app을 만들어보며 배운 내용을 정리한다. -->\r\n\r\n## Text Widget\r\n\r\nFlutter에서 아주 흔하게 사용되는 위젯 중 하나가 `Text` 위젯입니다.\r\n\r\nText 위젯은 이름에서부터 알 수 있듯이 텍스트를 화면에 그리는 위젯입니다. 뿐만 아니라 텍스트에 style을 입힐 수도 있습니다.\r\n\r\n### Text Widget 작성하기\r\n\r\n기본적인 Text 위젯은 이렇게 작성할 수 있습니다.\r\n\r\n```dart\r\nconst Text('Hello World!')\r\n```\r\n\r\n여기에 style을 입히고 싶다면 `style` 속성을 지정하면 됩니다.\r\n\r\n```dart\r\nText(\r\n  'Hello World!',\r\n  style: TextStyle(fontSize: 20),\r\n)\r\n```\r\n\r\n#### TextStyle class\r\n\r\nFlutter에는 Text를 스타일링할 수 있는 `TextStyle` class가 존재합니다.\r\n\r\nTextStyle class는 `immutable`하다고 설명하고 있는데요. 이 말은 사용할 때 명시한 값 외에는 런타임 시 변하게 할 수 없다는 의미입니다.\r\n\r\nTextStyle 클래스를 통해 지정할 수 있는 속성은 아래 링크에서 확인할 수 있습니다.\r\n\r\n[TextStyle class](https://api.flutter.dev/flutter/painting/TextStyle-class.html)\r\n\r\n<br/>\r\n\r\n---\r\n\r\n### RichText Widget\r\n\r\n`Text` 위젯은 하나의 문장을 작성할 수 있었는데요. 텍스트를 나누어 스타일링하고 싶거나 여러 개의 텍스트를 합쳐서 보여주고 싶다면 `RichText`를 사용하면 됩니다.\r\n\r\n```dart\r\nRichText(\r\n  text: TextSpan(\r\n    text: 'Hello ',\r\n    style: DefaultTextStyle.of(context).style,\r\n    children: const <TextSpan>[\r\n      TextSpan(text: 'bold', style: TextStyle(fontWeight: FontWeight.bold)),\r\n      TextSpan(text: ' world!'),\r\n    ],\r\n  ),\r\n)\r\n```\r\n\r\n`RichText` 안에 들어가는 여러 개의 텍스트들은 `TextSpan`을 사용해 보여집니다.\r\n\r\n◾ [[Flutter] Layout Widget 정리](/tech/flutter-layout-widget) 👈 이전 글 보기  \r\n◾ [[Flutter] Constraints 이해하기](/tech/flutter-understanding-constraints) 👈 다음 글 보기\r\n"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#text-widget\">Text Widget</a></p>\n<ul>\n<li>\n<p><a href=\"#text-widget-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\">Text Widget 작성하기</a></p>\n<ul>\n<li><a href=\"#textstyle-class\">TextStyle class</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#richtext-widget\">RichText Widget</a></p>\n</li>\n</ul>\n</li>\n</ul>"}}]}},"pageContext":{"slug":"/tech/flutter-text-widget"}},"staticQueryHashes":["2665612806"]}