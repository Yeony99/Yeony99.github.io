{"componentChunkName":"component---src-templates-blog-post-js","path":"/tech/let-me-know-js-a-bit-js-variable-naming","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"category":"tech","slug":"/tech/let-me-know-js-a-bit-js-variable-naming","tags":["쫌만알자"],"date":"2022-09-07","img":"https://user-images.githubusercontent.com/76241233/177932893-5a504b26-12e4-4ade-b1ce-1951d072ba82.jpg","title":"쫌만알자! (7) - 변수 명명 규칙"},"html":"<h2 id=\"변수-이름짓기명명-규칙-naming란\" style=\"position:relative;\">변수 이름짓기(명명 규칙, Naming)란?<a href=\"#%EB%B3%80%EC%88%98-%EC%9D%B4%EB%A6%84%EC%A7%93%EA%B8%B0%EB%AA%85%EB%AA%85-%EA%B7%9C%EC%B9%99-naming%EB%9E%80\" aria-label=\"변수 이름짓기명명 규칙 naming란 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>변수, 상수, 함수 이름들을 <strong>식별자</strong>라고 합니다.</p>\n<p>자바스크립트로 코딩할 때는 식별자들의 명명규칙을 지켜서 코딩하는 것이 좋습니다. 마치 글을 작성할 때 톤앤매너를 맞추는 것과 비슷한 맥락입니다.</p>\n<p>변수명만으로도 어떤 역할을 하는 변수인지 알 수 있는 경우도 많구요, 코드의 통일성, 가독성 또한 높여줍니다.</p>\n<p>앞서 알아본 자료형 분류와 변수/상수 구분에 따라 네이밍 규칙을 알아보겠습니다.</p>\n<h2 id=\"변수-명명-규칙\" style=\"position:relative;\">변수 명명 규칙<a href=\"#%EB%B3%80%EC%88%98-%EB%AA%85%EB%AA%85-%EA%B7%9C%EC%B9%99\" aria-label=\"변수 명명 규칙 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>자바스크립트의 변수는 <strong>문자</strong>로 선언해야 합니다.</p>\n<p>이 문자에는 알파벳과 UTF-8 언어, $, _ (언더바)가 포함됩니다. 문자 뒤에 붙는 숫자는 허용되나, 숫자로 시작하는 변수는 에러가 발생합니다.</p>\n<h3 id=\"관습적인-문자-사용\" style=\"position:relative;\">관습적인 문자 사용<a href=\"#%EA%B4%80%EC%8A%B5%EC%A0%81%EC%9D%B8-%EB%AC%B8%EC%9E%90-%EC%82%AC%EC%9A%A9\" aria-label=\"관습적인 문자 사용 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<deckgo-highlight-code language=\"javascript\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">let one = 1;\r\nlet 1 = 1; // X \r\n\r\nlet $email = document.getElementById(&#39;email&#39;);\r\nlet $router;\r\n\r\nlet _localVariable = &#39;test&#39;;</code>\n        </deckgo-highlight-code>\n<p>반드시 그런 것은 아니지만, <code class=\"language-text\">$</code>는 jQuery의 영향으로 DOM(Document Objejct Model, html의 객체 모델)에 접근하는 경우에 많이 사용합니다. 경우에 따라 전역 변수나 public한 변수 앞에 붙이기도 합니다.</p>\n<p><code class=\"language-text\">_</code> (언더바, underscore)는 보통 특정 범위 내에서만 사용, 실행되는 변수나 메소드 앞에 붙여 사용합니다.</p>\n<p><code class=\"language-text\">$</code>나 <code class=\"language-text\">_</code>를 붙이는 것은 전적으로 자유고, 그저 관습적으로 사용하는 것뿐입니다. 변수에 뭐가 붙었는지에 따라 자바스크립트 엔진이 제어하는 경우는 없습니다.</p>\n<h3 id=\"카멜-케이스-lowercamelcase\" style=\"position:relative;\">카멜 케이스 (lowerCamelCase)<a href=\"#%EC%B9%B4%EB%A9%9C-%EC%BC%80%EC%9D%B4%EC%8A%A4-lowercamelcase\" aria-label=\"카멜 케이스 lowercamelcase permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>자바스크립트에서 가장 흔하게 적용되는 명명 규칙입니다.</p>\n<p><strong>카멜</strong>이라는 단어에서 알아챈 분들도 계실겁니다. 카멜 케이스는 낙타 모습처럼 굴곡이 있는 형태로 변수의 이름을 작성하는 규칙입니다.</p>\n<deckgo-highlight-code language=\"javascript\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">let userName = &#39;Yeony&#39;;\r\nlet totalScore = 30;</code>\n        </deckgo-highlight-code>\n<p>보통 변수를 선언할 때 그냥 <strong>name</strong>이나 <strong>score</strong>보다는 해당 변수를 명확하기 위해 수식(꾸며주는 말)단어를 덧붙여줍니다. 그냥 <strong>name</strong>이라고만 하면 사용자명인지, 제품명인지, 별명인지 알 길이 없기 때문이죠. 여러 단어를 조합해서 만드는 것이 좋습니다.</p>\n<p>카멜 케이스로 변수명을 지을 때에는 단어와 단어가 구분될 때 2번째 단어부터 처음을 대문자(Uppercase)로 적어줍니다.</p>\n<h3 id=\"boolean-형\" style=\"position:relative;\">Boolean 형<a href=\"#boolean-%ED%98%95\" aria-label=\"boolean 형 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<deckgo-highlight-code language=\"javascript\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">let isSuccess = false; \r\n\r\n// 동작이 성공적으로 수행된 후\r\n...\r\n\r\nisSuccess = true;\r\n\r\n// 이후 동작</code>\n        </deckgo-highlight-code>\n<p>Boolean 형은 보통 <code class=\"language-text\">is-</code>로 시작하는 변수명으로 작성합니다. 마치 질문하는 것 같죠?<br>\nis - success? > No 라면 false를 할당하고, Yes라면 true를 할당하는 방식입니다.</p>\n<h3 id=\"string-형\" style=\"position:relative;\">String 형<a href=\"#string-%ED%98%95\" aria-label=\"string 형 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<deckgo-highlight-code language=\"javascript\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">let name1 = &#39;Nayeon&#39;;\r\nlet name2 = &#39;Kim&#39;;</code>\n        </deckgo-highlight-code>\n<p>위와 같이 숫자를 변수 뒤에 붙일 수 있습니다. 하지만 숫자로 표기하기 보다는 각각 변수의 특징을 선언해주는 것이 좋습니다.</p>\n<deckgo-highlight-code language=\"javascript\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">let firstName = &#39;Nayeon&#39;;\r\nlet surName = &#39;Kim&#39;;</code>\n        </deckgo-highlight-code>\n<h2 id=\"상수-명명-규칙\" style=\"position:relative;\">상수 명명 규칙<a href=\"#%EC%83%81%EC%88%98-%EB%AA%85%EB%AA%85-%EA%B7%9C%EC%B9%99\" aria-label=\"상수 명명 규칙 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>상수는 <strong>변하지 않는</strong> 값을 저장할 때 사용합니다. 따라서 다른 변수와는 확실히 구분되도록 대개 대문자로 작성합니다.</p>\n<h3 id=\"대문자-uppercase\" style=\"position:relative;\">대문자 (UPPERCASE)<a href=\"#%EB%8C%80%EB%AC%B8%EC%9E%90-uppercase\" aria-label=\"대문자 uppercase permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<deckgo-highlight-code language=\"javascript\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">const TAX = 10.27; </code>\n        </deckgo-highlight-code>\n<h3 id=\"대문자--스네이크-케이스-upper_snake_case\" style=\"position:relative;\">대문자 + 스네이크 케이스 (UPPER_SNAKE_CASE)<a href=\"#%EB%8C%80%EB%AC%B8%EC%9E%90--%EC%8A%A4%EB%84%A4%EC%9D%B4%ED%81%AC-%EC%BC%80%EC%9D%B4%EC%8A%A4-upper_snake_case\" aria-label=\"대문자  스네이크 케이스 upper_snake_case permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>여러 단어를 조합해 만들 때는 대문자와 스네이크 케이스를 조합해 사용합니다.<br>\n뱀이 꾸물거리는 것 같은 모양이라 이런 이름이 붙었습니다.</p>\n<deckgo-highlight-code language=\"javascript\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">let mathScore = 78;\r\nlet engScore = 48;\r\nconst FINAL_SCORE = mathScore + engScore;</code>\n        </deckgo-highlight-code>\n<p>함수 식별자의 명명규칙은 함수가 뭔지 안 이후에 살펴보겠습니다.</p>\n<p>다음 글에서는 자바스크립트의 예약어에 대해 알아보겠습니다.</p>\n<p>◾ <a href=\"/tech/let-me-know-js-a-bit-js-variable\">변수 사용하기</a>  👈 이전 글 보기<br>\n◾ <a href=\"/tech/let-me-know-js-a-bit-js-reserved-words\">자바스크립트 예약어 모음</a> 👈 다음 글 보기</p>","internal":{"content":"\r\n## 변수 이름짓기(명명 규칙, Naming)란?\r\n\r\n변수, 상수, 함수 이름들을 **식별자**라고 합니다. \r\n\r\n자바스크립트로 코딩할 때는 식별자들의 명명규칙을 지켜서 코딩하는 것이 좋습니다. 마치 글을 작성할 때 톤앤매너를 맞추는 것과 비슷한 맥락입니다. \r\n\r\n변수명만으로도 어떤 역할을 하는 변수인지 알 수 있는 경우도 많구요, 코드의 통일성, 가독성 또한 높여줍니다.   \r\n\r\n앞서 알아본 자료형 분류와 변수/상수 구분에 따라 네이밍 규칙을 알아보겠습니다.\r\n\r\n\r\n## 변수 명명 규칙\r\n\r\n자바스크립트의 변수는 **문자**로 선언해야 합니다.\r\n\r\n이 문자에는 알파벳과 UTF-8 언어, $, _ (언더바)가 포함됩니다. 문자 뒤에 붙는 숫자는 허용되나, 숫자로 시작하는 변수는 에러가 발생합니다.\r\n\r\n### 관습적인 문자 사용\r\n\r\n```javascript\r\nlet one = 1;\r\nlet 1 = 1; // X \r\n\r\nlet $email = document.getElementById('email');\r\nlet $router;\r\n\r\nlet _localVariable = 'test';\r\n```\r\n\r\n반드시 그런 것은 아니지만, `$`는 jQuery의 영향으로 DOM(Document Objejct Model, html의 객체 모델)에 접근하는 경우에 많이 사용합니다. 경우에 따라 전역 변수나 public한 변수 앞에 붙이기도 합니다.   \r\n\r\n`_` (언더바, underscore)는 보통 특정 범위 내에서만 사용, 실행되는 변수나 메소드 앞에 붙여 사용합니다.    \r\n\r\n\r\n`$`나 `_`를 붙이는 것은 전적으로 자유고, 그저 관습적으로 사용하는 것뿐입니다. 변수에 뭐가 붙었는지에 따라 자바스크립트 엔진이 제어하는 경우는 없습니다.   \r\n\r\n\r\n\r\n### 카멜 케이스 (lowerCamelCase)\r\n\r\n자바스크립트에서 가장 흔하게 적용되는 명명 규칙입니다.   \r\n\r\n**카멜**이라는 단어에서 알아챈 분들도 계실겁니다. 카멜 케이스는 낙타 모습처럼 굴곡이 있는 형태로 변수의 이름을 작성하는 규칙입니다.   \r\n\r\n```javascript\r\nlet userName = 'Yeony';\r\nlet totalScore = 30;\r\n```\r\n\r\n보통 변수를 선언할 때 그냥 **name**이나 **score**보다는 해당 변수를 명확하기 위해 수식(꾸며주는 말)단어를 덧붙여줍니다. 그냥 **name**이라고만 하면 사용자명인지, 제품명인지, 별명인지 알 길이 없기 때문이죠. 여러 단어를 조합해서 만드는 것이 좋습니다.\r\n\r\n카멜 케이스로 변수명을 지을 때에는 단어와 단어가 구분될 때 2번째 단어부터 처음을 대문자(Uppercase)로 적어줍니다.\r\n\r\n\r\n### Boolean 형 \r\n\r\n```javascript\r\nlet isSuccess = false; \r\n\r\n// 동작이 성공적으로 수행된 후\r\n...\r\n\r\nisSuccess = true;\r\n\r\n// 이후 동작\r\n```\r\n\r\nBoolean 형은 보통 `is-`로 시작하는 변수명으로 작성합니다. 마치 질문하는 것 같죠?   \r\nis - success? > No 라면 false를 할당하고, Yes라면 true를 할당하는 방식입니다.\r\n\r\n\r\n### String 형\r\n\r\n```javascript\r\nlet name1 = 'Nayeon';\r\nlet name2 = 'Kim';\r\n```\r\n\r\n위와 같이 숫자를 변수 뒤에 붙일 수 있습니다. 하지만 숫자로 표기하기 보다는 각각 변수의 특징을 선언해주는 것이 좋습니다.\r\n\r\n```javascript\r\nlet firstName = 'Nayeon';\r\nlet surName = 'Kim';\r\n```\r\n\r\n\r\n## 상수 명명 규칙\r\n\r\n상수는 **변하지 않는** 값을 저장할 때 사용합니다. 따라서 다른 변수와는 확실히 구분되도록 대개 대문자로 작성합니다.   \r\n\r\n### 대문자 (UPPERCASE)\r\n```javascript\r\nconst TAX = 10.27; \r\n```\r\n\r\n\r\n### 대문자 + 스네이크 케이스 (UPPER_SNAKE_CASE)\r\n\r\n여러 단어를 조합해 만들 때는 대문자와 스네이크 케이스를 조합해 사용합니다.   \r\n뱀이 꾸물거리는 것 같은 모양이라 이런 이름이 붙었습니다.\r\n\r\n```javascript\r\nlet mathScore = 78;\r\nlet engScore = 48;\r\nconst FINAL_SCORE = mathScore + engScore;\r\n```\r\n\r\n함수 식별자의 명명규칙은 함수가 뭔지 안 이후에 살펴보겠습니다.\r\n\r\n다음 글에서는 자바스크립트의 예약어에 대해 알아보겠습니다.\r\n\r\n◾ [변수 사용하기](/tech/let-me-know-js-a-bit-js-variable)  👈 이전 글 보기   \r\n◾ [자바스크립트 예약어 모음](/tech/let-me-know-js-a-bit-js-reserved-words) 👈 다음 글 보기"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EB%B3%80%EC%88%98-%EC%9D%B4%EB%A6%84%EC%A7%93%EA%B8%B0%EB%AA%85%EB%AA%85-%EA%B7%9C%EC%B9%99-naming%EB%9E%80\">변수 이름짓기(명명 규칙, Naming)란?</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%B3%80%EC%88%98-%EB%AA%85%EB%AA%85-%EA%B7%9C%EC%B9%99\">변수 명명 규칙</a></p>\n<ul>\n<li><a href=\"#%EA%B4%80%EC%8A%B5%EC%A0%81%EC%9D%B8-%EB%AC%B8%EC%9E%90-%EC%82%AC%EC%9A%A9\">관습적인 문자 사용</a></li>\n<li><a href=\"#%EC%B9%B4%EB%A9%9C-%EC%BC%80%EC%9D%B4%EC%8A%A4-lowercamelcase\">카멜 케이스 (lowerCamelCase)</a></li>\n<li><a href=\"#boolean-%ED%98%95\">Boolean 형</a></li>\n<li><a href=\"#string-%ED%98%95\">String 형</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%83%81%EC%88%98-%EB%AA%85%EB%AA%85-%EA%B7%9C%EC%B9%99\">상수 명명 규칙</a></p>\n<ul>\n<li><a href=\"#%EB%8C%80%EB%AC%B8%EC%9E%90-uppercase\">대문자 (UPPERCASE)</a></li>\n<li><a href=\"#%EB%8C%80%EB%AC%B8%EC%9E%90--%EC%8A%A4%EB%84%A4%EC%9D%B4%ED%81%AC-%EC%BC%80%EC%9D%B4%EC%8A%A4-upper_snake_case\">대문자 + 스네이크 케이스 (UPPER_SNAKE_CASE)</a></li>\n</ul>\n</li>\n</ul>"}}]}},"pageContext":{"slug":"/tech/let-me-know-js-a-bit-js-variable-naming"}},"staticQueryHashes":["2665612806"]}