{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/tech/flutter-CircularProgressIndicator-and-chip",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"category":"tech","slug":"/tech/flutter-CircularProgressIndicator-and-chip","tags":["스터디 Flutter"],"date":"2022-10-21","img":null,"title":"[Flutter] CircularProgressIndicator와 Chip 사용해보기"},"excerpt":"여러가지 컴포넌트로 데모 만들어보기 스터디 주제를 어떻게 묶어야 할 지 모르겠는 상황에 처해... Card, CircularProgressIndicator, Chip, Tooltip…","html":"<h2 id=\"여러가지-컴포넌트로-데모-만들어보기\" style=\"position:relative;\">여러가지 컴포넌트로 데모 만들어보기<a href=\"#%EC%97%AC%EB%9F%AC%EA%B0%80%EC%A7%80-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A1%9C-%EB%8D%B0%EB%AA%A8-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"여러가지 컴포넌트로 데모 만들어보기 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>스터디 주제를 어떻게 묶어야 할 지 모르겠는 상황에 처해...</p>\n<p>Card, CircularProgressIndicator, Chip, Tooltip 사용해 간단한 페이지를 만들어보았습니다.</p>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">import &#39;dart:async&#39;;\n\nimport &#39;package:flutter/material.dart&#39;;\n\n//Material design library\nvoid main() =&gt; runApp(const MyApp());\n\nclass MyApp extends StatelessWidget {\n  const MyApp({Key? key}) : super(key: key);\n  @override\n  Widget build(BuildContext context) {\n    return const MaterialApp(\n      title: &#39;Material App&#39;,\n      home: HomeView(),\n    );\n  }\n}\n\nclass HomeView extends StatefulWidget {\n  const HomeView({Key? key}) : super(key: key);\n  @override\n  State&lt;HomeView&gt; createState() =&gt; _HomeViewState();\n}\n\nclass _HomeViewState extends State&lt;HomeView&gt; {\n  List&lt;String&gt; categories = [\n    &#39;Javascript&#39;,\n    &#39;React&#39;,\n    &#39;Flutter&#39;,\n    &#39;Java&#39;,\n    &#39;Typescript&#39;,\n  ];\n\n  void addCategories(String categoryName) {\n    categories.add(categoryName);\n    setState(() {});\n  }\n\n  void removeCategories(String categoryName) {\n    categories.remove(categoryName);\n    setState(() {});\n  }\n\n  double _progress = 0;\n  bool _visible = false;\n\n  void startTimer() {\n    new Timer.periodic(\n      Duration(milliseconds: 500),\n      (Timer timer) =&gt; setState(\n        () {\n          if (_progress &gt;= 1) {\n            _visible = false;\n            timer.cancel();\n          } else {\n            _progress += 0.9;\n          }\n        },\n      ),\n    );\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: const Text(&#39;Demo&#39;),\n        centerTitle: true,\n      ),\n      body: SafeArea(\n        child: Padding(\n          padding: const EdgeInsets.all(16.0),\n          child: Center(\n            child: Column(\n              mainAxisAlignment: MainAxisAlignment.center,\n              children: [\n                const SizedBox(height: 16),\n                Card(\n                  child: TooltipSample(),\n                ),\n                const SizedBox(\n                  height: 16,\n                ),\n                Visibility(\n                  child: CircularProgressIndicator(\n                    strokeWidth: 10,\n                    backgroundColor: Colors.cyanAccent,\n                    valueColor: new AlwaysStoppedAnimation&lt;Color&gt;(Colors.red),\n                    value: _progress,\n                  ),\n                  visible: _visible,\n                  maintainSize: false,\n                ),\n                Wrap(\n                  spacing: 24,\n                  children: categories.map(\n                    (category) {\n                      return Chip(\n                        onDeleted: () {\n                          setState(() {\n                            _visible = true;\n                            _progress = 0;\n                          });\n                          startTimer();\n                          new Future.delayed(const Duration(milliseconds: 500),\n                              () {\n                            removeCategories(category);\n                          });\n                        },\n                        deleteIcon: const Icon(Icons.remove_circle),\n                        label: Text(category),\n                      );\n                    },\n                  ).toList(),\n                ),\n                if (categories.isEmpty)\n                  const Center(\n                    child: Text(&#39;No Languages available!&#39;),\n                  ),\n                SizedBox(\n                  height: 60,\n                ),\n              ],\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass TooltipSample extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return const Tooltip(\n      message: &#39;You can remove these&#39;,\n      child: Text(&#39;What should you do&#39;, style: TextStyle(fontSize: 20.0)),\n    );\n  }\n}</code>\n        </deckgo-highlight-code>\n<video width=\"100%\" controls=\"controls\">\n    <source src=\"https://user-images.githubusercontent.com/76241233/197394954-59dac2ef-78de-43ca-a9c7-9a9c2dbb2fca.mov\" type=\"video/mp4\">\n</video>\n<h2 id=\"알게-된-점\" style=\"position:relative;\">알게 된 점<a href=\"#%EC%95%8C%EA%B2%8C-%EB%90%9C-%EC%A0%90\" aria-label=\"알게 된 점 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p><code class=\"language-text\">CircularProgressIndicator</code> 에 당연히 Visible 속성이 있을 줄 알았는데, Visibility를 사용해야 한다는 것을 알게 되었다.</p>\n<p>◾ <a href=\"/tech/flutter-use-several-components\">[Flutter] Form, Alert에 사용할 수 있는 플러터 컴포넌트</a> 👈 이전 글 보기</p>","internal":{"content":"\n## 여러가지 컴포넌트로 데모 만들어보기\n\n스터디 주제를 어떻게 묶어야 할 지 모르겠는 상황에 처해...\n\nCard, CircularProgressIndicator, Chip, Tooltip 사용해 간단한 페이지를 만들어보았습니다.\n\n```dart\nimport 'dart:async';\n\nimport 'package:flutter/material.dart';\n\n//Material design library\nvoid main() => runApp(const MyApp());\n\nclass MyApp extends StatelessWidget {\n  const MyApp({Key? key}) : super(key: key);\n  @override\n  Widget build(BuildContext context) {\n    return const MaterialApp(\n      title: 'Material App',\n      home: HomeView(),\n    );\n  }\n}\n\nclass HomeView extends StatefulWidget {\n  const HomeView({Key? key}) : super(key: key);\n  @override\n  State<HomeView> createState() => _HomeViewState();\n}\n\nclass _HomeViewState extends State<HomeView> {\n  List<String> categories = [\n    'Javascript',\n    'React',\n    'Flutter',\n    'Java',\n    'Typescript',\n  ];\n\n  void addCategories(String categoryName) {\n    categories.add(categoryName);\n    setState(() {});\n  }\n\n  void removeCategories(String categoryName) {\n    categories.remove(categoryName);\n    setState(() {});\n  }\n\n  double _progress = 0;\n  bool _visible = false;\n\n  void startTimer() {\n    new Timer.periodic(\n      Duration(milliseconds: 500),\n      (Timer timer) => setState(\n        () {\n          if (_progress >= 1) {\n            _visible = false;\n            timer.cancel();\n          } else {\n            _progress += 0.9;\n          }\n        },\n      ),\n    );\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: const Text('Demo'),\n        centerTitle: true,\n      ),\n      body: SafeArea(\n        child: Padding(\n          padding: const EdgeInsets.all(16.0),\n          child: Center(\n            child: Column(\n              mainAxisAlignment: MainAxisAlignment.center,\n              children: [\n                const SizedBox(height: 16),\n                Card(\n                  child: TooltipSample(),\n                ),\n                const SizedBox(\n                  height: 16,\n                ),\n                Visibility(\n                  child: CircularProgressIndicator(\n                    strokeWidth: 10,\n                    backgroundColor: Colors.cyanAccent,\n                    valueColor: new AlwaysStoppedAnimation<Color>(Colors.red),\n                    value: _progress,\n                  ),\n                  visible: _visible,\n                  maintainSize: false,\n                ),\n                Wrap(\n                  spacing: 24,\n                  children: categories.map(\n                    (category) {\n                      return Chip(\n                        onDeleted: () {\n                          setState(() {\n                            _visible = true;\n                            _progress = 0;\n                          });\n                          startTimer();\n                          new Future.delayed(const Duration(milliseconds: 500),\n                              () {\n                            removeCategories(category);\n                          });\n                        },\n                        deleteIcon: const Icon(Icons.remove_circle),\n                        label: Text(category),\n                      );\n                    },\n                  ).toList(),\n                ),\n                if (categories.isEmpty)\n                  const Center(\n                    child: Text('No Languages available!'),\n                  ),\n                SizedBox(\n                  height: 60,\n                ),\n              ],\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass TooltipSample extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return const Tooltip(\n      message: 'You can remove these',\n      child: Text('What should you do', style: TextStyle(fontSize: 20.0)),\n    );\n  }\n}\n```\n\n<video width=\"100%\" controls=\"controls\">\n    <source src=\"https://user-images.githubusercontent.com/76241233/197394954-59dac2ef-78de-43ca-a9c7-9a9c2dbb2fca.mov\" type=\"video/mp4\">\n</video>\n\n## 알게 된 점\n\n`CircularProgressIndicator` 에 당연히 Visible 속성이 있을 줄 알았는데, Visibility를 사용해야 한다는 것을 알게 되었다.\n\n◾ [[Flutter] Form, Alert에 사용할 수 있는 플러터 컴포넌트](/tech/flutter-use-several-components) 👈 이전 글 보기\n"},"tableOfContents":"<ul>\n<li><a href=\"#%EC%97%AC%EB%9F%AC%EA%B0%80%EC%A7%80-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A1%9C-%EB%8D%B0%EB%AA%A8-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EA%B8%B0\">여러가지 컴포넌트로 데모 만들어보기</a></li>\n<li><a href=\"#%EC%95%8C%EA%B2%8C-%EB%90%9C-%EC%A0%90\">알게 된 점</a></li>\n</ul>"}}]}},"pageContext":{"slug":"/tech/flutter-CircularProgressIndicator-and-chip"}},
    "staticQueryHashes": ["2665612806"]}