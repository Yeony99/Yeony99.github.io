{"componentChunkName":"component---src-templates-blog-post-js","path":"/tech/flutter-CircularProgressIndicator-and-chip","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"category":"tech","slug":"/tech/flutter-CircularProgressIndicator-and-chip","tags":["스터디 Flutter"],"date":"2022-10-21","img":null,"title":"[Flutter] CircularProgressIndicator와 Chip 사용해보기"},"html":"<h2 id=\"여러가지-컴포넌트로-데모-만들어보기\" style=\"position:relative;\">여러가지 컴포넌트로 데모 만들어보기<a href=\"#%EC%97%AC%EB%9F%AC%EA%B0%80%EC%A7%80-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A1%9C-%EB%8D%B0%EB%AA%A8-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"여러가지 컴포넌트로 데모 만들어보기 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>스터디 주제를 어떻게 묶어야 할 지 모르겠는 상황에 처해...</p>\n<p>Card, CircularProgressIndicator, Chip, Tooltip 사용해 간단한 페이지를 만들어보았습니다.</p>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"blackboard\"  >\n          <code slot=\"code\">import &#39;dart:async&#39;;\r\n\r\nimport &#39;package:flutter/material.dart&#39;;\r\n\r\n//Material design library\r\nvoid main() =&gt; runApp(const MyApp());\r\n\r\nclass MyApp extends StatelessWidget {\r\n  const MyApp({Key? key}) : super(key: key);\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return const MaterialApp(\r\n      title: &#39;Material App&#39;,\r\n      home: HomeView(),\r\n    );\r\n  }\r\n}\r\n\r\nclass HomeView extends StatefulWidget {\r\n  const HomeView({Key? key}) : super(key: key);\r\n  @override\r\n  State&lt;HomeView&gt; createState() =&gt; _HomeViewState();\r\n}\r\n\r\nclass _HomeViewState extends State&lt;HomeView&gt; {\r\n  List&lt;String&gt; categories = [\r\n    &#39;Javascript&#39;,\r\n    &#39;React&#39;,\r\n    &#39;Flutter&#39;,\r\n    &#39;Java&#39;,\r\n    &#39;Typescript&#39;,\r\n  ];\r\n\r\n  void addCategories(String categoryName) {\r\n    categories.add(categoryName);\r\n    setState(() {});\r\n  }\r\n\r\n  void removeCategories(String categoryName) {\r\n    categories.remove(categoryName);\r\n    setState(() {});\r\n  }\r\n\r\n  double _progress = 0;\r\n  bool _visible = false;\r\n\r\n  void startTimer() {\r\n    new Timer.periodic(\r\n      Duration(milliseconds: 500),\r\n      (Timer timer) =&gt; setState(\r\n        () {\r\n          if (_progress &gt;= 1) {\r\n            _visible = false;\r\n            timer.cancel();\r\n          } else {\r\n            _progress += 0.9;\r\n          }\r\n        },\r\n      ),\r\n    );\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: const Text(&#39;Demo&#39;),\r\n        centerTitle: true,\r\n      ),\r\n      body: SafeArea(\r\n        child: Padding(\r\n          padding: const EdgeInsets.all(16.0),\r\n          child: Center(\r\n            child: Column(\r\n              mainAxisAlignment: MainAxisAlignment.center,\r\n              children: [\r\n                const SizedBox(height: 16),\r\n                Card(\r\n                  child: TooltipSample(),\r\n                ),\r\n                const SizedBox(\r\n                  height: 16,\r\n                ),\r\n                Visibility(\r\n                  child: CircularProgressIndicator(\r\n                    strokeWidth: 10,\r\n                    backgroundColor: Colors.cyanAccent,\r\n                    valueColor: new AlwaysStoppedAnimation&lt;Color&gt;(Colors.red),\r\n                    value: _progress,\r\n                  ),\r\n                  visible: _visible,\r\n                  maintainSize: false,\r\n                ),\r\n                Wrap(\r\n                  spacing: 24,\r\n                  children: categories.map(\r\n                    (category) {\r\n                      return Chip(\r\n                        onDeleted: () {\r\n                          setState(() {\r\n                            _visible = true;\r\n                            _progress = 0;\r\n                          });\r\n                          startTimer();\r\n                          new Future.delayed(const Duration(milliseconds: 500),\r\n                              () {\r\n                            removeCategories(category);\r\n                          });\r\n                        },\r\n                        deleteIcon: const Icon(Icons.remove_circle),\r\n                        label: Text(category),\r\n                      );\r\n                    },\r\n                  ).toList(),\r\n                ),\r\n                if (categories.isEmpty)\r\n                  const Center(\r\n                    child: Text(&#39;No Languages available!&#39;),\r\n                  ),\r\n                SizedBox(\r\n                  height: 60,\r\n                ),\r\n              ],\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass TooltipSample extends StatelessWidget {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return const Tooltip(\r\n      message: &#39;You can remove these&#39;,\r\n      child: Text(&#39;What should you do&#39;, style: TextStyle(fontSize: 20.0)),\r\n    );\r\n  }\r\n}</code>\n        </deckgo-highlight-code>\n<video width=\"100%\" controls=\"controls\">\r\n    <source src=\"https://user-images.githubusercontent.com/76241233/197394954-59dac2ef-78de-43ca-a9c7-9a9c2dbb2fca.mov\" type=\"video/mp4\">\r\n</video>\n<h2 id=\"알게-된-점\" style=\"position:relative;\">알게 된 점<a href=\"#%EC%95%8C%EA%B2%8C-%EB%90%9C-%EC%A0%90\" aria-label=\"알게 된 점 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p><code class=\"language-text\">CircularProgressIndicator</code> 에 당연히 Visible 속성이 있을 줄 알았는데, Visibility를 사용해야 한다는 것을 알게 되었다.</p>\n<p>◾ <a href=\"/tech/flutter-use-several-components\">[Flutter] Form, Alert에 사용할 수 있는 플러터 컴포넌트</a> 👈 이전 글 보기</p>","internal":{"content":"\r\n## 여러가지 컴포넌트로 데모 만들어보기\r\n\r\n스터디 주제를 어떻게 묶어야 할 지 모르겠는 상황에 처해...\r\n\r\nCard, CircularProgressIndicator, Chip, Tooltip 사용해 간단한 페이지를 만들어보았습니다.\r\n\r\n```dart\r\nimport 'dart:async';\r\n\r\nimport 'package:flutter/material.dart';\r\n\r\n//Material design library\r\nvoid main() => runApp(const MyApp());\r\n\r\nclass MyApp extends StatelessWidget {\r\n  const MyApp({Key? key}) : super(key: key);\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return const MaterialApp(\r\n      title: 'Material App',\r\n      home: HomeView(),\r\n    );\r\n  }\r\n}\r\n\r\nclass HomeView extends StatefulWidget {\r\n  const HomeView({Key? key}) : super(key: key);\r\n  @override\r\n  State<HomeView> createState() => _HomeViewState();\r\n}\r\n\r\nclass _HomeViewState extends State<HomeView> {\r\n  List<String> categories = [\r\n    'Javascript',\r\n    'React',\r\n    'Flutter',\r\n    'Java',\r\n    'Typescript',\r\n  ];\r\n\r\n  void addCategories(String categoryName) {\r\n    categories.add(categoryName);\r\n    setState(() {});\r\n  }\r\n\r\n  void removeCategories(String categoryName) {\r\n    categories.remove(categoryName);\r\n    setState(() {});\r\n  }\r\n\r\n  double _progress = 0;\r\n  bool _visible = false;\r\n\r\n  void startTimer() {\r\n    new Timer.periodic(\r\n      Duration(milliseconds: 500),\r\n      (Timer timer) => setState(\r\n        () {\r\n          if (_progress >= 1) {\r\n            _visible = false;\r\n            timer.cancel();\r\n          } else {\r\n            _progress += 0.9;\r\n          }\r\n        },\r\n      ),\r\n    );\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: const Text('Demo'),\r\n        centerTitle: true,\r\n      ),\r\n      body: SafeArea(\r\n        child: Padding(\r\n          padding: const EdgeInsets.all(16.0),\r\n          child: Center(\r\n            child: Column(\r\n              mainAxisAlignment: MainAxisAlignment.center,\r\n              children: [\r\n                const SizedBox(height: 16),\r\n                Card(\r\n                  child: TooltipSample(),\r\n                ),\r\n                const SizedBox(\r\n                  height: 16,\r\n                ),\r\n                Visibility(\r\n                  child: CircularProgressIndicator(\r\n                    strokeWidth: 10,\r\n                    backgroundColor: Colors.cyanAccent,\r\n                    valueColor: new AlwaysStoppedAnimation<Color>(Colors.red),\r\n                    value: _progress,\r\n                  ),\r\n                  visible: _visible,\r\n                  maintainSize: false,\r\n                ),\r\n                Wrap(\r\n                  spacing: 24,\r\n                  children: categories.map(\r\n                    (category) {\r\n                      return Chip(\r\n                        onDeleted: () {\r\n                          setState(() {\r\n                            _visible = true;\r\n                            _progress = 0;\r\n                          });\r\n                          startTimer();\r\n                          new Future.delayed(const Duration(milliseconds: 500),\r\n                              () {\r\n                            removeCategories(category);\r\n                          });\r\n                        },\r\n                        deleteIcon: const Icon(Icons.remove_circle),\r\n                        label: Text(category),\r\n                      );\r\n                    },\r\n                  ).toList(),\r\n                ),\r\n                if (categories.isEmpty)\r\n                  const Center(\r\n                    child: Text('No Languages available!'),\r\n                  ),\r\n                SizedBox(\r\n                  height: 60,\r\n                ),\r\n              ],\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass TooltipSample extends StatelessWidget {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return const Tooltip(\r\n      message: 'You can remove these',\r\n      child: Text('What should you do', style: TextStyle(fontSize: 20.0)),\r\n    );\r\n  }\r\n}\r\n```\r\n\r\n<video width=\"100%\" controls=\"controls\">\r\n    <source src=\"https://user-images.githubusercontent.com/76241233/197394954-59dac2ef-78de-43ca-a9c7-9a9c2dbb2fca.mov\" type=\"video/mp4\">\r\n</video>\r\n\r\n## 알게 된 점\r\n\r\n`CircularProgressIndicator` 에 당연히 Visible 속성이 있을 줄 알았는데, Visibility를 사용해야 한다는 것을 알게 되었다.\r\n\r\n◾ [[Flutter] Form, Alert에 사용할 수 있는 플러터 컴포넌트](/tech/flutter-use-several-components) 👈 이전 글 보기\r\n"},"tableOfContents":"<ul>\n<li><a href=\"#%EC%97%AC%EB%9F%AC%EA%B0%80%EC%A7%80-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A1%9C-%EB%8D%B0%EB%AA%A8-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EA%B8%B0\">여러가지 컴포넌트로 데모 만들어보기</a></li>\n<li><a href=\"#%EC%95%8C%EA%B2%8C-%EB%90%9C-%EC%A0%90\">알게 된 점</a></li>\n</ul>"}}]}},"pageContext":{"slug":"/tech/flutter-CircularProgressIndicator-and-chip"}},"staticQueryHashes":["2665612806"]}