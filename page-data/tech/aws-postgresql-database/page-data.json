{"componentChunkName":"component---src-templates-blog-post-js","path":"/tech/aws-postgresql-database","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"category":"tech","slug":"/tech/aws-postgresql-database","tags":["BE"],"date":"2023-07-19","img":null,"title":"AWS PostgreSQL RDS 생성하기"},"excerpt":"Nextjs 프로젝트를 처음부터 끝까지 메인으로 작업하게 되었다. DB나 배포 과정도 알아야 할 것 같아, 팀에서 이미 사용 중인 AWS와 S3를 배우기 시작했다. 내가 하던 프론트 공부랑은 좀 다른 영역이라 이 부분들은 다 BackEnd…","html":"<p>Nextjs 프로젝트를 처음부터 끝까지 메인으로 작업하게 되었다. DB나 배포 과정도 알아야 할 것 같아, 팀에서 이미 사용 중인 AWS와 S3를 배우기 시작했다.<br>\n내가 하던 프론트 공부랑은 좀 다른 영역이라 이 부분들은 다 BackEnd 태그로 분류했다.</p>\n<h2 id=\"rds란\" style=\"position:relative;\">RDS란<a href=\"#rds%EB%9E%80\" aria-label=\"rds란 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<ul>\n<li>AWS에서 제공하는 클라우드 기반 관계형 데이터베이스 서비스</li>\n<li>클라우드 기반이라 서버 설치 없이 DB를 사용할 수 있다.</li>\n</ul>\n<p>AWS는 <a href=\"https://docs.aws.amazon.com/ko_kr/AmazonRDS/latest/UserGuide/CHAP_GettingStarted.CreatingConnecting.PostgreSQL.html\">한글 가이드</a>가 굉장히 친절하게 나와있다.</p>\n<p>가이드에서는 EC2 부터 생성 후 RDS를 만들라 하는데, 이 과정은 건너뛰고 RDS부터 생성하였다.</p>\n<h3 id=\"create-database\" style=\"position:relative;\">Create DataBase<a href=\"#create-database\" aria-label=\"create database permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p><img src=\"https://github.com/Yeony99/Yeony99/assets/76241233/eb012dbc-ea5b-41ee-a960-d516a7664b97\" alt=\"DataBase 만들기\"></p>\n<p>PostgreSQL을 팀에서 사용하고 있기 때문에 PostgreSQL을 선택했으나, 각자 사용하는 것을 선택하면 된다.</p>\n<p><img src=\"https://github.com/Yeony99/Yeony99/assets/76241233/00f512f3-b778-4234-8fa7-750297376db3\" alt=\"Create DB 모드 선택\"></p>\n<p>DB 생성 시에는 Standard와 Easy 중에 고를 수 있다. Easy는 흔히 사용되는 기본 세팅들을 제공해준다. 나는 Easy 로 생성하였다.<br>\nEasy 로 생성 시 어떤 설정이 되는지 하단에서 확인할 수 있다.<br>\n<img src=\"https://github.com/Yeony99/Yeony99/assets/76241233/88977ed6-e2d7-4fd6-80f8-a1886cef102c\" alt=\"Easy 설정\"></p>\n<p><img src=\"https://github.com/Yeony99/Yeony99/assets/76241233/d5c10ec9-0a55-4108-82c2-2b1278f3c8c8\" alt=\"DB 인스턴스 설정\"></p>\n<p>인스턴스 사이즈, DataBase 이름과 username, password를 설정한다.<br>\n무료로 시도할 거라면 Free Tier를 선택하자.</p>\n<h3 id=\"rds-생성-후\" style=\"position:relative;\">RDS 생성 후<a href=\"#rds-%EC%83%9D%EC%84%B1-%ED%9B%84\" aria-label=\"rds 생성 후 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p><img src=\"https://github.com/Yeony99/Yeony99/assets/76241233/7de9cc7d-7767-4a36-8a25-861d557e8b38\" alt=\"Status Creating\"></p>\n<p>데이터베이스의 Status가 <strong>Available</strong>이 될 때까지 기다려야 한다.</p>\n<p><img src=\"https://github.com/Yeony99/Yeony99/assets/76241233/a75a77e4-2e88-4496-952f-7488fc6ba47c\" alt=\"DataBase 정보\"></p>\n<p>생성이 완료되면 <strong>연결 &#x26; 보안</strong> 탭을 확인한다.<br>\nPort는 자동으로 생성되어 PostgreSQL의 5432 포트로 설정된 것을 확인할 수 있다.</p>\n<ul>\n<li>Endpoint: AWS 웹 서비스를 위한 진입점의 URL (<a href=\"https://docs.aws.amazon.com/ko_kr/general/latest/gr/rande.html\">AWS의 정의</a>)\n<ul>\n<li>나는 리소스에 접근할 수 있는 통로 정도로 이해했다.</li>\n</ul>\n</li>\n</ul>\n<p>여기서 VPC 보안 그룹 (VPC security groups)를 확인하고 인바운드를 수정해야 한다.</p>\n<h3 id=\"vpc\" style=\"position:relative;\">VPC<a href=\"#vpc\" aria-label=\"vpc permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>아마존에서 제공하는 서비스로 Virual Private Cloud다. 퍼블릭 클라우드 내에서 호스팅되는 격리된 네트워크 공간을 제공한다.</p>\n<p><img src=\"https://github.com/Yeony99/Yeony99/assets/76241233/4964c179-1825-42a8-9891-592788ae6ade\" alt=\"VPC 인바운드\"></p>\n<ul>\n<li>인바운드: 데이터베이스 서버 안으로 들어오는 것</li>\n<li>아웃바운드: 데이터베이스 서버가 밖으로 응답하는 것</li>\n</ul>\n<p>외부에서 RDS에 접근하기 위해서는 VPC (보안그룹)의 인바운드를 수정해야 한다.</p>\n<p><img src=\"https://github.com/Yeony99/Yeony99/assets/76241233/377e7af1-8925-41d7-861b-a62769f2ac10\" alt=\"인바운드 수정\"></p>\n<p><strong>My IP</strong> 로 설정하면 이제 내 IP에서만 접근할 수 있다.</p>\n<h2 id=\"reference\" style=\"position:relative;\">Reference<a href=\"#reference\" aria-label=\"reference permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p><a href=\"https://docs.aws.amazon.com/ko_kr/AmazonRDS/latest/UserGuide/CHAP_GettingStarted.CreatingConnecting.PostgreSQL.html\">PostgreSQL DB 인스턴스 생성 및 해당 인스턴스에 연결</a></p>","internal":{"content":"\r\nNextjs 프로젝트를 처음부터 끝까지 메인으로 작업하게 되었다. DB나 배포 과정도 알아야 할 것 같아, 팀에서 이미 사용 중인 AWS와 S3를 배우기 시작했다.   \r\n내가 하던 프론트 공부랑은 좀 다른 영역이라 이 부분들은 다 BackEnd 태그로 분류했다.\r\n\r\n## RDS란\r\n\r\n* AWS에서 제공하는 클라우드 기반 관계형 데이터베이스 서비스\r\n* 클라우드 기반이라 서버 설치 없이 DB를 사용할 수 있다.\r\n\r\nAWS는 [한글 가이드](https://docs.aws.amazon.com/ko_kr/AmazonRDS/latest/UserGuide/CHAP_GettingStarted.CreatingConnecting.PostgreSQL.html)가 굉장히 친절하게 나와있다. \r\n\r\n가이드에서는 EC2 부터 생성 후 RDS를 만들라 하는데, 이 과정은 건너뛰고 RDS부터 생성하였다.\r\n\r\n### Create DataBase\r\n![DataBase 만들기](https://github.com/Yeony99/Yeony99/assets/76241233/eb012dbc-ea5b-41ee-a960-d516a7664b97)\r\n\r\nPostgreSQL을 팀에서 사용하고 있기 때문에 PostgreSQL을 선택했으나, 각자 사용하는 것을 선택하면 된다.\r\n\r\n![Create DB 모드 선택](https://github.com/Yeony99/Yeony99/assets/76241233/00f512f3-b778-4234-8fa7-750297376db3)\r\n\r\nDB 생성 시에는 Standard와 Easy 중에 고를 수 있다. Easy는 흔히 사용되는 기본 세팅들을 제공해준다. 나는 Easy 로 생성하였다.    \r\nEasy 로 생성 시 어떤 설정이 되는지 하단에서 확인할 수 있다.   \r\n![Easy 설정](https://github.com/Yeony99/Yeony99/assets/76241233/88977ed6-e2d7-4fd6-80f8-a1886cef102c)      \r\n\r\n\r\n\r\n![DB 인스턴스 설정](https://github.com/Yeony99/Yeony99/assets/76241233/d5c10ec9-0a55-4108-82c2-2b1278f3c8c8)\r\n\r\n인스턴스 사이즈, DataBase 이름과 username, password를 설정한다.    \r\n무료로 시도할 거라면 Free Tier를 선택하자.\r\n\r\n### RDS 생성 후\r\n\r\n![Status Creating](https://github.com/Yeony99/Yeony99/assets/76241233/7de9cc7d-7767-4a36-8a25-861d557e8b38)\r\n\r\n데이터베이스의 Status가 **Available**이 될 때까지 기다려야 한다. \r\n\r\n![DataBase 정보](https://github.com/Yeony99/Yeony99/assets/76241233/a75a77e4-2e88-4496-952f-7488fc6ba47c)\r\n\r\n생성이 완료되면 **연결 & 보안** 탭을 확인한다.   \r\nPort는 자동으로 생성되어 PostgreSQL의 5432 포트로 설정된 것을 확인할 수 있다.\r\n\r\n* Endpoint: AWS 웹 서비스를 위한 진입점의 URL ([AWS의 정의](https://docs.aws.amazon.com/ko_kr/general/latest/gr/rande.html))\r\n    * 나는 리소스에 접근할 수 있는 통로 정도로 이해했다.\r\n\r\n여기서 VPC 보안 그룹 (VPC security groups)를 확인하고 인바운드를 수정해야 한다.\r\n\r\n### VPC\r\n\r\n아마존에서 제공하는 서비스로 Virual Private Cloud다. 퍼블릭 클라우드 내에서 호스팅되는 격리된 네트워크 공간을 제공한다.\r\n\r\n![VPC 인바운드](https://github.com/Yeony99/Yeony99/assets/76241233/4964c179-1825-42a8-9891-592788ae6ade)\r\n\r\n* 인바운드: 데이터베이스 서버 안으로 들어오는 것\r\n* 아웃바운드: 데이터베이스 서버가 밖으로 응답하는 것\r\n\r\n외부에서 RDS에 접근하기 위해서는 VPC (보안그룹)의 인바운드를 수정해야 한다.\r\n\r\n![인바운드 수정](https://github.com/Yeony99/Yeony99/assets/76241233/377e7af1-8925-41d7-861b-a62769f2ac10)\r\n\r\n**My IP** 로 설정하면 이제 내 IP에서만 접근할 수 있다.\r\n\r\n\r\n## Reference\r\n\r\n[PostgreSQL DB 인스턴스 생성 및 해당 인스턴스에 연결](https://docs.aws.amazon.com/ko_kr/AmazonRDS/latest/UserGuide/CHAP_GettingStarted.CreatingConnecting.PostgreSQL.html)   \r\n"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#rds%EB%9E%80\">RDS란</a></p>\n<ul>\n<li><a href=\"#create-database\">Create DataBase</a></li>\n<li><a href=\"#rds-%EC%83%9D%EC%84%B1-%ED%9B%84\">RDS 생성 후</a></li>\n<li><a href=\"#vpc\">VPC</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#reference\">Reference</a></p>\n</li>\n</ul>"}}]}},"pageContext":{"slug":"/tech/aws-postgresql-database"}},"staticQueryHashes":["2665612806"]}