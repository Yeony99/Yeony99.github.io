{"version":3,"file":"component---src-pages-log-index-js-d19596c8aeef5327802c.js","mappings":"uKAGMA,EAAKC,EAAAA,QAAAA,OAAAA,WAAH,2DAAGA,CAAH,mBAeR,IAXmB,SAAAC,GACf,OACI,yBACI,QAACF,EAAD,MACI,kBAAKE,EAAMC,QACX,kBAAKD,EAAME,WAI1B,C,2BCbKC,E,QAAMJ,QAAAA,IAAAA,WAAH,mDAAGA,CAAH,gGAQT,K,wGCJA,mBAAe,GAAe,IAAZK,EAAW,EAAXA,KAChB,GAAwBC,EAAAA,EAAAA,UAAS,CAC/BC,IAAK,GACLC,QAAQ,IAFHC,EAAP,KAAYC,EAAZ,KAKA,GAAwBJ,EAAAA,EAAAA,WAAS,GAA1BK,EAAP,KAAaC,EAAb,KASA,GAAsBN,EAAAA,EAAAA,UAAS,IAAxBO,EAAP,KAAYC,EAAZ,KAGMC,EAAO,SAACC,GACZC,QAAQC,IAAI,WAAYF,GACxBF,EAAOE,EACR,EAGC,OACI,yBACI,QAAC,IAAD,CAAQG,KAAK,OAAOjB,MAAM,QAC1B,eAAKkB,UAAU,SACX,QAAC,IAAD,CAAYlB,MAAM,QAAQC,SAAS,6BACnC,eAAKiB,UAAU,iDACb,QAAC,IAAD,CAAKA,UAAW,0BAAmC,IAAPP,EAAW,eAAiB,IAAKQ,QAAS,kBAAMN,EAAK,GAAX,GAAtF,OAEEV,EAAKiB,kBAAkBC,SAASC,KAAI,SAAAR,GAAG,OAAI,QAAC,IAAD,CAAKT,IAAKS,EAAKI,UAAW,0BAA4BP,GAAOG,EAAK,eAAiB,IAAKK,QAAS,kBAAMN,EAAKC,EAAX,GAAkBA,EAAvH,KAI1CX,EAAKiB,kBAAkBG,MAAMD,KAAI,gBAAGE,EAAH,EAAGA,KAAH,OAE9B,eAAKnB,IAAKmB,EAAKC,GAAIP,UAAU,kBAAkBQ,MAAO,CAACC,QAAUhB,EAAgBa,EAAKI,YAAYC,KAAKP,KAAI,SAAAR,GAAG,OAAIA,CAAJ,IAASgB,SAASnB,GAAM,QAAU,OAAzE,WAEnE,eAAKO,UAAU,kBAAkBa,KAAK,MAAMZ,QAAS,kBAhCpDd,EAgCwEmB,EAAKC,GA/BlGf,IAD0BJ,EAgC4EG,IA9BtGM,QAAQC,IAAIV,EAAQG,GACpBD,EAAS,OAAD,UAAKD,EAAL,CAAUF,IAAKA,EAAKC,OAAQG,UACpCM,QAAQC,IAAIX,EAAKE,GAJG,IAACF,EAAKC,CAgC+C,IAC/C,kBAAKkB,EAAKI,YAAY5B,QACtB,eAAKkB,UAAS,4BAA6BX,EAAIF,KAAOmB,EAAKC,GAAI,mBAAqB,MACjF,eAAKO,wBAA0B,CAACC,OAAQ1B,EAAIF,KAAOmB,EAAKC,GAAID,EAAKU,KAAOV,EAAKW,QAAQ,iDAGxF,eAAKjB,UAAU,8CAA4C,eAAKA,UAAU,QAAQM,EAAKI,YAAYC,KAAKP,KAAI,SAAAR,GAAG,OAAI,QAAC,IAAD,CAAKT,IAAKS,EAAKI,UAAU,OAAOJ,EAApC,MAAsD,eAAKY,MAAO,CAACU,SAAU,WAAaZ,EAAKI,YAAYS,QAC1N,oBAXoB,MAkBtC,QAAC,IAAD,MAtDZ,C","sources":["webpack://gatsby-starter-default/./src/components/page-header.js","webpack://gatsby-starter-default/./src/components/tag.js","webpack://gatsby-starter-default/./src/pages/log/index.js"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst PH = styled.header`\n    padding: 1rem;\n`\n\nconst PageHeader = props => {\n    return (\n        <>\n            <PH>\n                <h1>{props.title}</h1>\n                <h6>{props.subtitle}</h6>\n            </PH>\n        </>\n    )\n}\n\nexport default PageHeader;","// import React from \"react\"\nimport styled from \"styled-components\";\n\nconst Tag = styled.div`\n    padding: 0.1rem 0.5rem;\n    margin: 0.5rem;\n    margin-left: 0;\n    font-size: 0.85rem;\n    border-radius: 0.25rem;\n`\n\nexport default Tag;","import React, { useState } from \"react\";\nimport Header from \"../../components/header\"\nimport { graphql, Link } from \"gatsby\"\nimport PageHeader from \"../../components/page-header\";\nimport Tag from \"../../components/tag\";\nimport Footer from \"../../components/footer\";\n\nexport default ({ data }) => {\n  const [obj, setState] = useState({\n    key: '',\n    isOpen: false,\n  });\n\n  const [open, setOpen] = useState(false)\n\n  const changeHandler = (key, isOpen) => {\n    setOpen(isOpen? false: true)\n    console.log(isOpen, open)\n    setState({...obj, key: key, isOpen: open})\n    console.log(key, obj)\n  }\n\n  const [all, setAll] = useState('')\n\n\n  const test = (tag) => {\n    console.log('test!!!!', tag)\n    setAll(tag)\n  }\n\n  \n    return (\n        <>\n            <Header path=\"/log\" title=\"로그\" />\n            <div className=\"wrap\">\n                <PageHeader title=\"Log ☘\" subtitle=\"개발, 읽을거리, 일 관련된 사소한 기록들\" />\n                <div className=\"padding-bottom-1 wrap flex overflow-x-scroll\">\n                  <Tag className={\"tag pointer bg-orange \" + (all == ''? 'selected-tag' : '')} onClick={() => test('')}>All</Tag>\n                  {\n                    data.allMarkdownRemark.distinct.map(tag => <Tag key={tag} className={\"tag pointer bg-orange \" + (all == tag? 'selected-tag' : '')} onClick={() => test(tag)}>{tag}</Tag>)\n                  }\n                </div>\n                \n                {data.allMarkdownRemark.edges.map(({ node }) => (\n                  \n                    <div key={node.id} className=\"row flex-column\" style={{display: !all ? 'block' : node.frontmatter.tags.map(tag => tag).includes(all)? 'block' : 'none'}}>\n                      {/* <Link to={node.frontmatter.slug}> */}\n                        <div className=\"padding-1 h-100\" name=\"key\" onClick={() => changeHandler(node.id, open)}>\n                              <h3>{node.frontmatter.title}</h3>\n                              <div className={`transition duration-500 ${obj.key == node.id? ' log-selected-bg' : ''}`}>\n                                 <div dangerouslySetInnerHTML={ {__html: obj.key == node.id? node.html : node.excerpt+' <span style=\"color: #c5c5d6\"> 더보기</span>'} }></div>\n                              </div>\n                              \n                              <div className=\"flex justify-content-between align-center\"><div className=\"flex\">{node.frontmatter.tags.map(tag => <Tag key={tag} className=\"tag\">{tag}</Tag>)}</div><div style={{fontSize: 0.7+'rem'}}>{node.frontmatter.date}</div></div>\n                              <hr/>\n                          </div>\n                      {/* </Link> */}\n                    </div>\n                ))}\n\n            </div>\n            <Footer />\n        </>\n    )\n}\n\n\nexport const query = graphql`\nquery MyQuery {\n  allMarkdownRemark(filter: {frontmatter: {category: {eq: \"log\"}}} sort: {fields: frontmatter___date, order: DESC}) {\n    edges {\n      node {\n        frontmatter {\n          date\n          title\n          tags    \n          slug\n        }\n        excerpt\n        html\n        internal {\n          content\n        }\n        id\n      }\n    }\n    distinct(field: frontmatter___tags)\n  }\n}\n\n\n`"],"names":["PH","styled","props","title","subtitle","Tag","data","useState","key","isOpen","obj","setState","open","setOpen","all","setAll","test","tag","console","log","path","className","onClick","allMarkdownRemark","distinct","map","edges","node","id","style","display","frontmatter","tags","includes","name","dangerouslySetInnerHTML","__html","html","excerpt","fontSize","date"],"sourceRoot":""}